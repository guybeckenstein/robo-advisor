version: '3.8'

services:
  db:
    image: postgres:15.3
    container_name: Postgres_Container
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      - POSTGRES_DB=roboadvisor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - web_network
  redis:
    image: redis:6.2
    container_name: Redis_Container
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - web_network
  web:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
       - db:db
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    container_name: RoboAdvisor_Container
    restart: always
    ports:
      - '8000:8000'
    environment:
      - DEBUG=1
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=roboadvisor
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - DATABASE=postgres
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    env_file:
      - .env.oauth
    volumes:
      - .:/usr/src/app/
    networks:
      - web_network

volumes:
  postgres_data:

networks:
  web_network: